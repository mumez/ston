(name 'STON-UTF8-Core-MasashiUmezawa.5' message '- Fixed STON091Writer>>encodeCharacter:, STONUtf8Writer>>encodeCharacter: also- Added $/ encoding tests in #testDoubleQuotedString' id '98a53ac9-d7b7-4123-a4f1-9cdad58e9a74' date '06/28/2023' time '21:47:42' author 'MasashiUmezawa' ancestors ((name 'STON-UTF8-Core-dkh.4' message 'Issue #6: remote the (now) unused protocol in STON for using UTF8 encoding' id 'ead267b0-8f0c-459a-976f-a0042fcdfdf9' date '06/29/2015' time '14:16:16' author 'dkh' ancestors ((name 'STON-UTF8-Core-dkh.3' message 'Issue #6: return STONWriter and STONReader implementations to original implementation ... GemStone-specific mods are now present in STON051*, STON091*, and STONutf8* classes ... Modify tests to accomodate https://github.com/svenvc/ston/issues/11' id '56c81432-651e-46f4-a4fe-b5719065bfd0' date '06/29/2015' time '14:10:18' author 'dkh' ancestors ((name 'STON-UTF8-Core-dkh.2' message 'Issue #6: STONReader and STONWriter tests are now passing for all 4 serialization schemes ' id '2d4350c7-a5d4-49ef-b6d6-d01c176a406b' date '06/26/2015' time '16:57:54' author 'dkh' ancestors ((name 'STON-UTF8-Core-dkh.1' message 'Issue #6: laying the groundwork for supporting the 4 STON serialization options:  - classic (utf8 challenged)  - utf8-friendly  - GemStone/tODE v0.5.1  - GemStone/tODE v0.9.*Consolidating the Pharo/GemStone packages in the gemstone branch.' id '1e5d4020-6ba1-4a9e-984b-c5b911bb8a26' date '06/26/2015' time '14:19:20' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())